"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseProvider = exports.BlockNotFoundError = void 0;
class BlockNotFoundError extends Error {
    constructor() {
        super('Block not found');
        this.name = 'BlockNotFoundError';
    }
}
exports.BlockNotFoundError = BlockNotFoundError;
class BaseProvider {
    instance;
    log;
    abis = {};
    constructor({ instance, log, abis }) {
        this.instance = instance;
        this.log = log;
        if (abis) {
            this.abis = abis;
        }
    }
    getNetworkIdentifier() {
        throw new Error('getNetworkIdentifier method was not defined');
    }
    processBlock(blockNum) {
        throw new Error(`processBlock method was not defined when fetching block ${blockNum}`);
    }
    processPool(blockNumber) {
        throw new Error(`processPool method was not defined when fetching pool for block ${blockNumber}`);
    }
}
exports.BaseProvider = BaseProvider;
