import { Web3Provider } from '@ethersproject/providers';
import { Wallet } from '@ethersproject/wallet';
import type { Propose, Vote, EthSigProposeMessage, EthSigVoteMessage, Envelope, EthereumSigClientConfig, EthereumSigClientOpts } from '../../../types';
export declare class EthereumSig {
    config: EthereumSigClientConfig;
    constructor(opts: EthereumSigClientOpts);
    generateSalt(): number;
    sign<T extends EthSigProposeMessage | EthSigVoteMessage>(web3: Web3Provider | Wallet, address: string, message: T, types: any): Promise<Envelope<T>>;
    send(envelop: any): Promise<any>;
    propose(web3: Web3Provider | Wallet, address: string, data: Propose): Promise<Envelope<EthSigProposeMessage>>;
    vote(web3: Web3Provider | Wallet, address: string, data: Vote): Promise<Envelope<EthSigVoteMessage>>;
}
